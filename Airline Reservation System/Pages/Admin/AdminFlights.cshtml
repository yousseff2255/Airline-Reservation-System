@page
@model Airline_Reservation_System.Pages.Admin.AdminFlightsModel
@{
    ViewData["name"] = "sidebar";
    ViewData["Title"] = "Flights";
    ViewData["Nav"] = HttpContext.Session.GetString("role").ToString();
    ViewData["Logged"] = Convert.ToString(HttpContext.Session.GetString("email"));
    ViewData["Active"] = "adminflight";
}





        <h1 class="page-title">Flights</h1>
        <!-- header -->
        <div class="header" style="height: 120px;justify-content:space-evenly;position:relative;">

          


          

            <div class="card h-100">
                <div class="card-body d-flex">
                    <div class="d-flex justify-content-between align-items-center mb-3 flex-column">
                        <div class="d-flex align-items-center">
                            <p class="text-muted mb-1" style="font-size: medium;">Number of Flights</p>
                            <i class="bi bi-airplane ms-3 fs-2 text-primary"></i>
                        </div>
                        <div class="d-flex flex-row">
                            <div class="fs-3 fw-bold text-dark">
                                @Model.num_flights
                            </div>
                        </div>
                    </div>
                </div>
            </div>



            <div class="card h-100">
                <div class="card-body d-flex">
                    <div class="d-flex justify-content-between align-items-center mb-3 flex-column">
                        <div class="d-flex align-items-center">
                            <p class="text-muted mb-1" style="font-size: medium;">Number of Passengers</p>
                            <i class="bi bi-people ms-3 fs-2 text-primary"></i>
                        </div>
                        <div class="d-flex flex-row">
                            <div class="fs-3 fw-bold text-dark">
                                @Model.num_passengers
                            </div>
                        </div>
                    </div>
                </div>
            </div>


          

        </div>
        <!-- ./ header -->
        <!-- Main content -->
        <div class="content ">

            <!-- Path-->
            <div class="mb-4">
                <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a href="../">
                                <i class="bi bi-globe2 small me-2"></i> Home Page
                            </a>
                        </li>
                        <li class="breadcrumb-item active" aria-current="flights">Flights</li>
                    </ol>
                </nav>
            </div>

            <!-- Table choices -->
            <div class="card">
                <div class="card-body">
                    <div class="d-md-flex gap-4 align-items-center">
                        <div class="d-none d-md-flex">All Flights</div>
                        <div class="d-md-flex gap-4 align-items-center">
                            <form class="mb-3 mb-md-0">
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <select style="width: auto;" class="form-select" id="statusFilter">
                                                <option value="" disabled selected>All Flights</option>
                                                <option value="Scheduled">Scheduled</option>
                                                <option value="Delayed">Delayed</option>
                                                <option value="Finished">Finished</option>
                                        </select>
                                    </div>
                                   @*  <div class="col-md-6">
                                        <div style="display: flex; align-items: stretch; width: 100%;">
                                            <input type="text" class="form-control" id="searchInput" placeholder="Search" style="height: auto; box-sizing: border-box; width:400px">
                                            <button class="btn btn-outline-light w-25 ms-2">
                                                <i class="bi bi-search"></i>
                                            </button>
                                        </div>
                                    </div> *@
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <div class="table-responsive">
                <table class="table table-custom table-lg mb-0" id="flightsTable">
                    <thead>
                        <tr>
                            <th>Flight Number</th>
                            <th>Number of passengers</th>
                            <th>Destination</th>
                            <th>Departure Time</th>
                            <th>Current Status</th>
                            <th class="text-end"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < @Model.dt.Rows.Count; i++)
                        {
                            <tr data-status="@Model.dt.Rows[i][4]">
                                <td>@Model.dt.Rows[i][0]</td>
                                <td>@Model.dt.Rows[i][1]</td>
                                <td>@Model.dt.Rows[i][3]</td>
                                <td>@Model.dt.Rows[i][2]</td>
                                <td>
                                    @if (@Model.dt.Rows[i][4].ToString().ToLower() == "finished")
                                    {
                                <button class="btn btn-success">Finished</button>
                                    }
                            else if (@Model.dt.Rows[i][4].ToString().ToLower() == "delayed")
                                    {
                                        <button class="btn btn-danger">Delayed</button>
                                    }
                            else if (@Model.dt.Rows[i][4].ToString().ToLower() == "scheduled")
                                    {
                                <button class="btn btn-primary">Scheduled</button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-warning">@Model.dt.Rows[i][4]</button>
                                    }
                                </td>
                         
                        <td class="text-end">
                            <button class="btn btn-outline-light edit-btn"
                                    data-flight="@Model.dt.Rows[i][0]"
                                    data-bs-toggle="modal" data-bs-target="#editModal">
                                Edit
                            </button>
                            <form method="post" asp-page-handler="ViewFlight" style="display: inline;">
                                <input type="hidden" name="flightId" value="@Model.dt.Rows[i][0]" />
                                <button type="submit" class="btn btn-outline-info">
                                    View
                                </button>
                            </form>
                        </td>
                              
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <form method="post">
                @Html.AntiForgeryToken()
            </form>

            <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            <!-- Modal -->
            <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editModalLabel">Update Flight Status</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Options to choose from -->
                            <div class="list-group">
                                <button class="list-group-item list-group-item-action status-btn" data-status="Delayed">Delayed</button>
                        <button class="list-group-item list-group-item-action status-btn" data-status="Finished">Finished</button>
                        <button class="list-group-item list-group-item-action status-btn" data-status="Scheduled">Scheduled</button>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary" id="confirmUpdateBtn">Confirm</button>
                        </div>
                    </div>
                </div>
            </div>

        

         <script>
                $(document).ready(function () {
                    let selectedFlightNumber;
                    let selectedStatus;

                    // When 'Edit' button is clicked, store the flight number
                    $(document).on('click', '.edit-btn', function () {
                        // Reset previous selections
                        selectedFlightNumber = $(this).data('flight');
                        selectedStatus = null;

                        console.log('Edit button clicked');
                        console.log('Selected Flight Number:', selectedFlightNumber);

                        // Reset status button styling
                        $('.status-btn').removeClass('active');
                    });

                    // When a status button is clicked, store the status
                    $(document).on('click', '.status-btn', function () {
                        selectedStatus = $(this).data('status');

                        console.log('Status button clicked');
                        console.log('Selected Status:', selectedStatus);

                        // Remove active class from all status buttons
                        $('.status-btn').removeClass('active');
                        // Add active class to the clicked button
                        $(this).addClass('active');
                    });

                    // Confirm button sends AJAX to the backend
                    $(document).on('click', '#confirmUpdateBtn', function () {
                        console.log('Confirm Update button clicked');
                        console.log('Selected Flight Number:', selectedFlightNumber);
                        console.log('Selected Status:', selectedStatus);

                        // Validate selections
                        if (!selectedFlightNumber) {
                            alert("Please select a flight to update.");
                            return;
                        }

                        if (!selectedStatus) {
                            alert("Please select a status.");
                            return;
                        }

                        // Prepare AJAX request
                        $.ajax({
                            url: '@Url.Page("", "UpdateFlightStatus")',
                            type: 'POST',
                            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                            data: {
                                flightNumber: selectedFlightNumber,
                                status: selectedStatus,
                                // Include anti-forgery token
                                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                            },
                            beforeSend: function () {
                                console.log('Sending AJAX request');
                                console.log('Request Data:', {
                                    flightNumber: selectedFlightNumber,
                                    status: selectedStatus
                                });
                            },
                            success: function (response) {
                                console.log('AJAX Success:', response);

                                if (response.success) {
                                    console.log("Flight status updated successfully!");
                                    // Reload the page to reflect changes
                                    location.reload();
                                } else {
                                    // Handle server-side validation or error
                                    alert("Failed to update flight status: " + (response.message || "Unknown error"));
                                }
                            },
                            error: function (xhr, status, error) {
                                // Detailed error logging
                                console.error('AJAX Error Details:');
                                console.error('Status:', status);
                                console.error('Error:', error);
                                console.error('Response Text:', xhr.responseText);

                                // More user-friendly error message
                                alert("Error communicating with the server. Please try again.");
                            }
                        });
                    });

                    // Optional: Set up global AJAX headers (anti-forgery token)
                    $.ajaxSetup({
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        }
                    });
                });

                $(document).ready(function () {
                    // Status Filter
                    $('#statusFilter').on('change', function () {
                        filterFlights();
                    });

                    // Search Input
                    $('#searchInput').on('keyup', function () {
                        filterFlights();
                    });

                    function filterFlights() {
                        const statusFilter = $('#statusFilter').val().toLowerCase();
                        const searchTerm = $('#searchInput').val().toLowerCase();

                        $('#flightsTable tbody tr').each(function () {
                            const row = $(this);
                            const status = row.data('status').toLowerCase();
                            const rowText = row.text().toLowerCase();

                            // Check status filter
                            const statusMatch = statusFilter === '' || status === statusFilter.toLowerCase();

                            // Check search input
                            const searchMatch = searchTerm === '' ||
                                rowText.includes(searchTerm);

                            // Show or hide row based on filters
                            if (statusMatch && searchMatch) {
                                row.show();
                            } else {
                                row.hide();
                            }
                        });

                        // Update row count or show message if no results
                        updateResultsInfo();
                    }

                    function updateResultsInfo() {
                        const visibleRows = $('#flightsTable tbody tr:visible').length;
                        const totalRows = $('#flightsTable tbody tr').length;

                        // Optional: Add a message or update a results counter
                        if (visibleRows === 0) {
                            // If no rows match, you could add a "No results" row
                            $('#flightsTable tbody').append(
                                '<tr class="no-results"><td colspan="6" class="text-center">No flights match your search criteria</td></tr>'
                            );
                        } else {
                            // Remove any existing no results message
                            $('.no-results').remove();
                        }

                        // Optional: You could add a results counter
                        // $('#resultsCount').text(`Showing ${visibleRows} of ${totalRows} flights`);
                    }
                });
         </script>


          
          

       

@{
         
<nav class="mt-4" aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        <!-- Previous Button -->
                    <li class="page-item @(Model.page == 1 ? "disabled" : "")">
                        <a class="page-link" href="?PageNumber=@(Model.page - 1)" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>

        <!-- Page Numbers -->
       
        @for (int i = 1; i <= 5; i++) {
            <li class="page-item @(Model.page == i ? "active":"")" >
                <a class="page-link" href="?PageNumber=@i">@i</a>
            </li>
        }

        <!-- Next Button -->
                        <li class="page-item @(Model.page == 3 ? "disabled" : "")">
                            <a class="page-link" href="?PageNumber=@(Model.page + 1)" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>
}



        </div>
        <!-- ./ Main content -->



   
    <!-- ./ layout-wrapper -->

